version: "3.3"
services:
  pyassess-dashboard:
    image: geoapos/pyassess_raise
    container_name: pyassess-dashboard
    environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://db-pyassess:5432/test_db
        - SPRING_DATASOURCE_USERNAME=root
        - SPRING_DATASOURCE_PASSWORD=30a301d7257

  db-pyassess:
    image: postgres:14.7
    container_name: db-pyassess
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 30a301d7257
      POSTGRES_DB: test_db

  code-inspector-dashboard:
    image: archontisk/codeinspector
    container_name: code-inspector-dashboard
    environment:
        - DB_URL=mysql+pymysql://root:root@db-code-inspector:3306/code_inspector_db
    depends_on:
      db-code-inspector:
        # Warning: depends_on does not wait for db to be ready. Read more: https://docs.docker.com/compose/startup-order/
        # Conditionally start this service only if the database service is healthy.
        # The database service is considered healthy if the healthcheck command exits with a code > 0.
        condition: service_healthy

  db-code-inspector:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: code_inspector_db
    ports:
      - "3306:3306"
    # Checks if MySQL server is healthy by running 'mysqladmin ping' every 10 seconds.
    # Considers the service unhealthy if the check fails to complete within 5 seconds or fails 3 times in a row.
    # Read more: https://docs.docker.com/compose/compose-file
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  backend-dashboard:
    build:
      context: ./backend/.
    container_name: backend-dashboard
    depends_on:
      - db-dashboard
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-dashboard:5432/test_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=30a301d7257
      - SERVICES_EXTERNAL_PYASSESS_URL=pyassess-dashboard:8080
      - SERVICES_EXTERNAL_CODEINSPECTOR_URL=code-inspector-dashboard:8000
    ports:
      - '8088:8080'

  db-dashboard:
    image: postgres:14.7
    container_name: db-dashboard
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 30a301d7257
      POSTGRES_DB: test_db
    volumes:
       - dashboard_postgresql:/var/lib/postgresql
       - dashboard_postgresql_data:/var/lib/postgresql/data
    ports:
      - '5458:5432'

volumes:
  dashboard_postgresql:
  dashboard_postgresql_data:







