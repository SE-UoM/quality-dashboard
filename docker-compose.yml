version: "2.2"
services:
  # --- PYASSESS SERVICE ---
  # Pyassess service backend
  pyassess-dashboard:
    image: nikosnikolaidis/python-code-quality-assessment
    container_name: pyassess-dashboard
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-pyassess-dashboard:5432/test_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    ports:
      - '8091:8080'

  # Pyassess service database
  db-pyassess-dashboard:
    image: postgres:16.2
    container_name: db-pyassess-dashboard
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    volumes:
      - pyassess_dashboard_postgresql:/var/lib/postgresql
      - pyassess_dashboard_postgresql_data:/var/lib/postgresql/data

  # --- CODE INSPECTOR SERVICE ---
  # Code inspector service backend
  code-inspector-dashboard:
    image: archontisk/codeinspector
    container_name: code-inspector-dashboard
    depends_on:
      db-code-inspector-dashboard:
        condition: service_healthy
    security_opt:
      - seccomp:unconfined
    environment:
      - DB_URL=mysql+pymysql://root:root@db-code-inspector-dashboard:3306/code_inspector_db
    ports:
      - '8092:8000'

  # Code inspector service database
  db-code-inspector-dashboard:
    image: mysql:8.3
    container_name: db-code-inspector-dashboard
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: code_inspector_db
      MYSQL_PASSWORD: root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - code_inspector_dashboard_mysql:/var/lib/mysql

  # --- QUALITY DASHBOARD SERVICE ---
  # Database for the quality dashboard service
  db-dashboard:
    image: postgres:16.2
    container_name: db-dashboard
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: dashboard-db
    volumes:
      - dashboard_postgresql:/var/lib/postgresql
      - dashboard_postgresql_data:/var/lib/postgresql/data
    ports:
      - '5458:5432'

  backend-dashboard:
    build:
      context: ./backend/.
    container_name: backend-dashboard
    depends_on:
      - db-dashboard
    environment:
      # ---------- DASHBOARD DATABASE CONFIGURATION ----------
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-dashboard:5432/dashboard-db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root

      # ---------- EXTERNAL SERVICES CONFIGURATION ----------
      - EXTERNAL_SERVICES_ACTIVATED=false
      - SERVICES_EXTERNAL_PYASSESS_URL=http://localhost:8091
      - SERVICES_EXTERNAL_CODEINSPECTOR_URL=http://localhost:8092
      - SONAR_SONARQUBE_URL=http://localhost:9952
      - GITHUB_TOKEN=11206c8b5d19d77902bf96d9fde3b51f205813dc

      # ---------- FRONTEND CONFIGURATION ----------
      - FRONTEND_URL=http://localhost:3000

      # ---------- SUPERUSER CONFIGURATION ----------
      # SUPERUSER CREDENTIALS
      # TODO: Change these credentials on build to match your needs
      - SUPERUSER_EMAIL=xxx@gmail.com
      - SUPERUSER_PASSWORD=123456
      # SPRING MAIL CONFIGURATION
      # TODO: Change these credentials on build to match your needs
      - SPRING_MAIL_USERNAME=mail.archontis.gr
      - SPRING_MAIL_PASSWORD=jWncD#1T!h(l
      - SPRING_MAIL_HOST=smtp.gmail.com
      - SPRING_MAIL_PORT=27
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
    ports:
      - '8088:8080'

  # --- SONARQUBE SERVICE ---
  sonarqube-dashboard:
     image: sonarqube:9.9.1-community
     container_name: sonarqube-dashboard
     privileged: true
     command: -Dsonar.ce.javaOpts=-Xmx6144m
     depends_on:
       - db-sonarqube-dashboard
     environment:
       SONARQUBE_JDBC_URL: jdbc:postgresql://db-sonarqube-dashboard:5432/sonar
       SONAR_JDBC_USERNAME: sonar
       SONAR_JDBC_PASSWORD: sonar
     volumes:
       - sonarqube_dashboard_conf:/opt/sonarqube/conf
       - sonarqube_dashboard_data:/opt/sonarqube/data
     ports:
       - '9952:9000'

  # Database for the sonarqube service
  db-sonarqube-dashboard:
    image: postgres:16.2
    container_name: db-sonarqube-dashboard
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - sonarqube_dashboard_postgresql:/var/lib/postgresql
      - sonarqube_dashboard_postgresql_data:/var/lib/postgresql/data

  # --- FRONTEND SERVICE ---
  frontend-dashboard:
    build:
      context: ./frontend/SW-Quality-Dashboard/.
    container_name: frontend-dashboard
    environment:
      VITE_API_BASE_URL: http://localhost:8088
    ports:
      - '3000:5173'

  # --- WIKI.JS SERVICE ---
  wikijs:
    image: requarks/wiki:2
    container_name: wikijs
    environment:
      - DB_TYPE=postgres
      - DB_HOST=db-wikijs
      - DB_PORT=5432
      - DB_USER=root
      - DB_PASS=root
      - DB_NAME=wikijs
    ports:
      - '3001:3000'
    volumes:
      # Mounts wiki.js data inside a 'wikijs' folder
      - ./wikijs/data:/var/wiki
    depends_on:
      - db-wikijs

  # Database for the Wiki.js service
  db-wikijs:
    image: postgres:16.2
    container_name: db-wikijs
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: wikijs
    volumes:
      # Mount PostgreSQL data in the 'wikijs' folder
      - ./wikijs/db:/var/lib/postgresql
      - ./wikijs/db_data:/var/lib/postgresql/data
 

volumes:
# DASHBOARD VOLUMES
  dashboard_postgresql:
  dashboard_postgresql_data:

  # PYASSESS VOLUMES
  pyassess_dashboard_postgresql:
  pyassess_dashboard_postgresql_data:

  # CODE INSPECTOR VOLUMES
  code_inspector_dashboard_mysql:

  # SONARQUBE VOLUMES
  sonarqube_dashboard_conf:
  sonarqube_dashboard_data:
  sonarqube_dashboard_postgresql:
  sonarqube_dashboard_postgresql_data:

  # # WIKI.JS VOLUMES
  # wikijs_data:
  # wikijs_postgresql:
  # wikijs_postgresql_data:
